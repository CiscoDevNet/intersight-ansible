---
- block:
  - name: Define anchor for Intersight API login info
    ansible.builtin.set_fact:
      api_info: &api_info
        api_private_key: "{{ api_private_key }}"
        api_key_id: "{{ api_key_id }}"
        api_uri: "{{ api_uri | default(omit) }}"
        validate_certs: "{{ validate_certs | default(omit) }}"
        organization: "{{ organization }}"

  - name: Make sure Env is clean
    cisco.intersight.intersight_thermal_policy:
      <<: *api_info
      name: "{{ item }}"
      state: absent
    loop:
      - test_thermal_policy
      - test_thermal_policy_2

  - name: Create thermal policy - check-mode
    cisco.intersight.intersight_thermal_policy:
      <<: *api_info
      name: test_thermal_policy
      description: "Test thermal policy description"
      tags:
        - Key: Site
          Value: Test
        - Key: Site2
          Value: Test2
      fan_control_mode: "LowPower"
    check_mode: true
    register: creation_res_check_mode

  - name: Verify thermal policy was not created - check-mode
    ansible.builtin.assert:
      that:
        - creation_res_check_mode is changed
        - creation_res_check_mode.api_response == {}

  - name: Create thermal policy
    cisco.intersight.intersight_thermal_policy:
      <<: *api_info
      name: test_thermal_policy
      description: "Test thermal policy description"
      tags:
        - Key: Site
          Value: Test
        - Key: Site2
          Value: Test2
      fan_control_mode: "LowPower"
    register: creation_res

  - name: Fetch info after creation
    cisco.intersight.intersight_thermal_policy_info:
      <<: *api_info
      name: test_thermal_policy
    register: creation_info_res

  - name: Verify thermal policy creation by info
    ansible.builtin.assert:
      that:
        - creation_res.changed
        - creation_info_res.api_response[0].Name == 'test_thermal_policy'
        - creation_info_res.api_response[0].FanControlMode == 'LowPower'

  - name: Verify thermal policy creation response aligns with info response
    ansible.builtin.assert:
      that:
        - creation_res.api_response.Name == creation_info_res.api_response[0].Name
        - creation_res.api_response.FanControlMode == creation_info_res.api_response[0].FanControlMode

  - name: Create thermal policy (idempotency check)
    cisco.intersight.intersight_thermal_policy:
      <<: *api_info
      name: test_thermal_policy
      description: "Test thermal policy description"
      tags:
        - Key: Site
          Value: Test
        - Key: Site2
          Value: Test2
      fan_control_mode: "LowPower"
    register: creation_res_ide

  - name: Verify thermal policy creation (idempotency check)
    ansible.builtin.assert:
      that:
        - not creation_res_ide.changed

  - name: Change fan control mode to an existing thermal policy
    cisco.intersight.intersight_thermal_policy:
      <<: *api_info
      name: test_thermal_policy
      fan_control_mode: "HighPower"
    register: changed_res

  - name: Fetch info after change
    cisco.intersight.intersight_thermal_policy_info:
      <<: *api_info
      name: test_thermal_policy
    register: change_info_res

  - name: Verify thermal policy change by info
    ansible.builtin.assert:
      that:
        - changed_res.changed
        - change_info_res.api_response[0].Name == 'test_thermal_policy'
        - change_info_res.api_response[0].FanControlMode == 'HighPower'

  - name: Create another thermal policy
    cisco.intersight.intersight_thermal_policy:
      <<: *api_info
      name: test_thermal_policy_2
      description: "Test another thermal policy description"
      fan_control_mode: "Balanced"
    register: creation_res_b

  - name: Fetch all thermal policies under selected organization
    cisco.intersight.intersight_thermal_policy_info:
      <<: *api_info
    register: creation_info_res_b

  - name: Check that there are at least thermal policies under this organization
    ansible.builtin.assert:
      that:
        - creation_info_res_b.api_response | length > 1

  always:
  - name: Remove thermal policies
    cisco.intersight.intersight_thermal_policy:
      <<: *api_info
      name: "{{ item }}"
      state: absent
    loop:
      - test_thermal_policy
      - test_thermal_policy_2