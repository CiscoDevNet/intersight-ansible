---
- block:
  - name: Define anchor for Intersight API login info
    ansible.builtin.set_fact:
      api_info: &api_info
        api_private_key: "{{ api_private_key }}"
        api_key_id: "{{ api_key_id }}"
        api_uri: "{{ api_uri | default(omit) }}"
        validate_certs: "{{ validate_certs | default(omit) }}"
        organization: "{{ organization }}"

  - name: Make sure Env is clean
    cisco.intersight.intersight_wwn_pool:
      <<: *api_info
      name: "{{ item.pool_name }}"
      pool_purpose: "{{ item.pool_purpose }}"
      state: absent
    loop:
     - { pool_name: test_wwn_pool, pool_purpose: "WWNN" }
     - { pool_name: test_wwn_pool, pool_purpose: "WWPN" }
    
  - name: Create WWNN pool - check-mode
    cisco.intersight.intersight_wwn_pool:
      <<: *api_info
      name: test_wwn_pool
      description: "Test wwnn pool description"
      tags:
        - "Key": "Site"
          "Value": "Test"
      pool_purpose: "WWNN"
      id_blocks:
        - "wwn_from": "20:00:00:25:B5:00:00:00"
          "size": 100
        - "wwn_from": "20:00:00:25:B5:FF:00:00"
          "size": 100
    check_mode: true
    register: creation_res_check_mode

  - name: Verify WWNN pool was not created - check-mode
    ansible.builtin.assert:
      that:
        - creation_res_check_mode is changed
        - creation_res_check_mode.api_response == {}

  - name: Create WWNN pool
    cisco.intersight.intersight_wwn_pool:
      <<: *api_info
      name: test_wwn_pool
      description: "Test wwnn pool description"
      tags:
        - "Key": "Site"
          "Value": "Test"
      pool_purpose: "WWNN"
      id_blocks:
        - "wwn_from": "20:00:00:25:B5:00:00:00"
          "size": 100
        - "wwn_from": "20:00:00:25:B5:FF:00:00"
          "size": 100
    register: creation_res

  - name: Fetch WWNN pool info after creation
    cisco.intersight.intersight_wwn_pool_info:
      <<: *api_info
      name: test_wwn_pool
      pool_purpose: "WWNN"
    register: creation_info_res_a

  - name: Verify WWNN pool creation by info
    ansible.builtin.assert:
      that:
        - creation_res.changed
        - creation_info_res_a.api_response[0].Name == 'test_wwn_pool'
        - creation_info_res_a.api_response[0].PoolPurpose == 'WWNN'
        - creation_info_res_a.api_response[0].IdBlocks[0]["Size"] == 100
        - creation_info_res_a.api_response[0].IdBlocks[0]["From"] == "20:00:00:25:B5:00:00:00"
        - creation_info_res_a.api_response[0].IdBlocks[1]["Size"] == 100
        - creation_info_res_a.api_response[0].IdBlocks[1]["From"] == "20:00:00:25:B5:FF:00:00"
        
  - name: Verify WWNN pool creation response aligns with info response
    ansible.builtin.assert:
      that:
        - creation_res.api_response.Name == creation_info_res_a.api_response[0].Name
        - creation_res.api_response.PoolPurpose == creation_info_res_a.api_response[0].PoolPurpose
        - creation_res.api_response.IdBlocks[0]["Size"] == creation_info_res_a.api_response[0].IdBlocks[0]["Size"]
        - creation_res.api_response.IdBlocks[0]["From"] == creation_info_res_a.api_response[0].IdBlocks[0]["From"]

  - name: Create WWNN pool (idempotency check)
    cisco.intersight.intersight_wwn_pool:
      <<: *api_info
      name: test_wwn_pool
      description: "Test wwnn pool description"
      tags:
        - "Key": "Site"
          "Value": "Test"
      pool_purpose: "WWNN"
      id_blocks:
        - "wwn_from": "20:00:00:25:B5:00:00:00"
          "size": 100
        - "wwn_from": "20:00:00:25:B5:FF:00:00"
          "size": 100
    register: creation_res_ide

  - name: Verify WWNN pool creation (idempotency check)
    ansible.builtin.assert:
      that:
        - not creation_res_ide.changed

  - name: Create WWPN pool with the same pool name
    cisco.intersight.intersight_wwn_pool:
      <<: *api_info
      name: test_wwn_pool
      description: "Test wwpn pool description"
      tags:
        - "Key": "Site"
          "Value": "Test"
      pool_purpose: "WWPN"
      id_blocks:
        - "wwn_from": "20:00:00:25:B5:00:BB:00"
          "size": 200
        - "wwn_from": "20:00:00:25:B5:FF:BB:00"
          "size": 200
    register: creation_res

  - name: Fetch WWPN pool info after creation
    cisco.intersight.intersight_wwn_pool_info:
      <<: *api_info
      name: test_wwn_pool
      pool_purpose: "WWPN"
    register: creation_info_res_b

  - name: Verify WWPN pool creation by info
    ansible.builtin.assert:
      that:
        - creation_res.changed
        - creation_info_res_b.api_response[0].Name == 'test_wwn_pool'
        - creation_info_res_b.api_response[0].PoolPurpose == 'WWPN'
        - creation_info_res_b.api_response[0].IdBlocks[0]["Size"] == 200
        - creation_info_res_b.api_response[0].IdBlocks[0]["From"] == "20:00:00:25:B5:00:BB:00"
        - creation_info_res_b.api_response[0].IdBlocks[1]["Size"] == 200
        - creation_info_res_b.api_response[0].IdBlocks[1]["From"] == "20:00:00:25:B5:FF:BB:00"
        
  - name: Verify WWPN pool creation response aligns with info response
    ansible.builtin.assert:
      that:
        - creation_res.api_response.Name == creation_info_res_b.api_response[0].Name
        - creation_res.api_response.PoolPurpose == creation_info_res_b.api_response[0].PoolPurpose
        - creation_res.api_response.IdBlocks[0]["Size"] == creation_info_res_b.api_response[0].IdBlocks[0]["Size"]
        - creation_res.api_response.IdBlocks[0]["From"] == creation_info_res_b.api_response[0].IdBlocks[0]["From"]


  - name: Validate failure due to missing id_blocks
    cisco.intersight.intersight_wwn_pool:
      <<: *api_info
      name: test_wwn_pool_validate
      description: "Test wwn pool description"
      tags:
        - "Key": "Site"
          "Value": "Test"
        - "Key": "Site2"
          "Value": "Test3"
      state: present
      pool_purpose: "WWPN"
    register: failure_res
    failed_when:
      - "'wwn id_blocks parameter must be provided and contain at least one block' not in failure_res.msg"

  - name: Validate failure due to missing pool_purpose
    cisco.intersight.intersight_wwn_pool:
      <<: *api_info
      name: test_wwn_pool_validate
      description: "Test wwn pool description"
      tags:
        - "Key": "Site"
          "Value": "Test"
        - "Key": "Site2"
          "Value": "Test3"
      state: present
      id_blocks:
        - "wwn_from": "20:00:00:25:B5:00:BB:00"
          "size": 200
        - "wwn_from": "20:00:00:25:B5:FF:BB:00"
          "size": 200
    register: failure_res
    failed_when:
      - "'missing required arguments: pool_purpose' not in failure_res.msg"

  - name: Fetch all wwn pools under default organization
    cisco.intersight.intersight_wwn_pool_info:
      <<: *api_info
    register: creation_info_res_c

  - name: Check that there are at least 2 wwn pools under this organization
    ansible.builtin.assert:
      that:
        - creation_info_res_c.api_response | length > 1

  - name: Fetch all wwn pools with the same name
    cisco.intersight.intersight_wwn_pool_info:
      <<: *api_info
      name: test_wwn_pool
    register: creation_info_res_d

  - name: Check that there are at least 2 wwn pools with this name
    ansible.builtin.assert:
      that:
        - creation_info_res_d.api_response | length > 1

  - name: Fetch 1 WWPN pool
    cisco.intersight.intersight_wwn_pool_info:
      <<: *api_info
      name: test_wwn_pool
      pool_purpose: "WWPN"
    register: creation_info_res_e

  - name: Check that there are at least 2 wwn pools with this name
    ansible.builtin.assert:
      that:
        - creation_info_res_e.api_response | length == 1

  always:
  - name: Remove wwn pools
    cisco.intersight.intersight_wwn_pool:
      <<: *api_info
      name: "{{ item.pool_name }}"
      pool_purpose: "{{ item.pool_purpose }}"
      state: absent
    loop:
     - { pool_name: test_wwn_pool, pool_purpose: "WWNN" }
     - { pool_name: test_wwn_pool, pool_purpose: "WWPN" }
