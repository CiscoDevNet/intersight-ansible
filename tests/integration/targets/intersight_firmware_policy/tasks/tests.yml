---
- block:
  - name: Define anchor for Intersight API login info
    ansible.builtin.set_fact:
      api_info: &api_info
        api_private_key: "{{ api_private_key }}"
        api_key_id: "{{ api_key_id }}"
        api_uri: "{{ api_uri | default(omit) }}"
        validate_certs: "{{ validate_certs | default(omit) }}"
        organization: "{{ organization }}"

  - name: Make sure Env is clean
    cisco.intersight.intersight_firmware_policy:
      <<: *api_info
      name: "{{ item }}"
      state: absent
    loop:
      - test_firmware_policy
      - test_firmware_policy_2
      - test_firmware_policy_validate
      - test_firmware_policy_drives_only
      - test_firmware_policy_no_exclusions

  - name: Create firmware policy - check-mode
    cisco.intersight.intersight_firmware_policy:
      <<: *api_info
      name: test_firmware_policy
      description: "Test firmware policy description"
      target_platform: "Standalone"
      model_bundle_combo:
        - model_family: "UCSC-C220-M5"
          bundle_version: "4.3(2.250037)"
        - model_family: "UCSC-C220-M4"
          bundle_version: "4.1(2m)"
      tags:
        - Key: "Site"
          Value: "Test"
    check_mode: true
    register: creation_res_check_mode

  - name: Verify firmware policy was not created - check-mode
    ansible.builtin.assert:
      that:
        - creation_res_check_mode is changed
        - creation_res_check_mode.api_response == {}

  - name: Create firmware policy
    cisco.intersight.intersight_firmware_policy:
      <<: *api_info
      name: test_firmware_policy
      description: "Test firmware policy description"
      target_platform: "Standalone"
      model_bundle_combo:
        - model_family: "UCSC-C220-M5"
          bundle_version: "4.3(2.250037)"
        - model_family: "UCSC-C220-M4"
          bundle_version: "4.1(2m)"
      tags:
        - Key: "Site"
          Value: "Test"
    register: creation_res

  - name: Fetch info after creation
    cisco.intersight.intersight_firmware_policy_info:
      <<: *api_info
      name: test_firmware_policy
    register: creation_info_res

  - name: Verify firmware policy creation by info
    ansible.builtin.assert:
      that:
        - creation_res.changed
        - creation_info_res.api_response[0].Name == 'test_firmware_policy'
        - creation_info_res.api_response[0].TargetPlatform == "Standalone"
        - creation_info_res.api_response[0].ModelBundleCombo | length == 2
        - creation_info_res.api_response[0].ModelBundleCombo[0].ModelFamily == "UCSC-C220-M5"
        - creation_info_res.api_response[0].ModelBundleCombo[0].BundleVersion == "4.3(2.250037)"

  - name: Verify firmware policy creation response aligns with info response
    ansible.builtin.assert:
      that:
        - creation_res.api_response.Name == creation_info_res.api_response[0].Name
        - creation_res.api_response.TargetPlatform == creation_info_res.api_response[0].TargetPlatform
        - creation_res.api_response.ModelBundleCombo == creation_info_res.api_response[0].ModelBundleCombo

  - name: Create firmware policy (idempotency check)
    cisco.intersight.intersight_firmware_policy:
      <<: *api_info
      name: test_firmware_policy
      description: "Test firmware policy description"
      target_platform: "Standalone"
      model_bundle_combo:
        - model_family: "UCSC-C220-M5"
          bundle_version: "4.3(2.250037)"
        - model_family: "UCSC-C220-M4"
          bundle_version: "4.1(2m)"
      tags:
        - Key: "Site"
          Value: "Test"
    register: creation_res_ide

  - name: Verify firmware policy creation (idempotency check)
    ansible.builtin.assert:
      that:
        - not creation_res_ide.changed

  - name: Validate failure due to missing target_platform
    cisco.intersight.intersight_firmware_policy:
      <<: *api_info
      name: test_firmware_policy_validate
      description: "Test policy description"
      state: present
    register: failure_res
    failed_when:
      - "'state is present but all of the following are missing: target_platform, model_bundle_combo' not in failure_res.msg"

  - name: Create firmware policy with excluded components
    cisco.intersight.intersight_firmware_policy:
      <<: *api_info
      name: test_firmware_policy_2
      description: "Test firmware policy with exclusions"
      target_platform: "Standalone"
      model_bundle_combo:
        - model_family: "UCSC-C220-M7"
          bundle_version: "4.3(4.242038)"
      exclude_drives: true
      exclude_storage_controllers: true
    register: creation_res_b

  - name: Verify firmware policy with excluded components
    ansible.builtin.assert:
      that:
        - creation_res_b.changed
        - creation_res_b.api_response.Name == 'test_firmware_policy_2'
        - creation_res_b.api_response.ExcludeComponentList | length == 2
        - '"local-disk" in creation_res_b.api_response.ExcludeComponentList'
        - '"storage-controller" in creation_res_b.api_response.ExcludeComponentList'

  - name: Fetch all firmware policies under the organization
    cisco.intersight.intersight_firmware_policy_info:
      <<: *api_info
    register: creation_info_res_b

  - name: Check that there are at least 2 firmware policies under this organization
    ansible.builtin.assert:
      that:
        - creation_info_res_b.api_response | length > 1

  - name: Create firmware policy with only exclude_drives set
    cisco.intersight.intersight_firmware_policy:
      <<: *api_info
      name: test_firmware_policy_drives_only
      description: "Test firmware policy excluding only drives"
      target_platform: "FIAttached"
      model_bundle_combo:
        - model_family: "UCSC-C220-M5"
          bundle_version: "4.3(2.250037)"
      exclude_drives: true
    register: creation_res_drives_only

  - name: Verify firmware policy with only drives excluded
    ansible.builtin.assert:
      that:
        - creation_res_drives_only.changed
        - creation_res_drives_only.api_response.ExcludeComponentList | length == 1
        - '"local-disk" in creation_res_drives_only.api_response.ExcludeComponentList'
        - '"storage-controller" not in creation_res_drives_only.api_response.ExcludeComponentList'

  - name: Create firmware policy with no exclusions
    cisco.intersight.intersight_firmware_policy:
      <<: *api_info
      name: test_firmware_policy_no_exclusions
      description: "Test firmware policy with no exclusions"
      target_platform: "Standalone"
      model_bundle_combo:
        - model_family: "UCSC-C220-M4"
          bundle_version: "4.1(2m)"
    register: creation_res_no_exclusions

  - name: Verify firmware policy with no exclusions
    ansible.builtin.assert:
      that:
        - creation_res_no_exclusions.changed
        - creation_res_no_exclusions.api_response.ExcludeComponentList is none or creation_res_no_exclusions.api_response.ExcludeComponentList == [] or creation_res_no_exclusions.api_response.ExcludeComponentList is not defined

  - name: Update firmware policy by adding exclude components
    cisco.intersight.intersight_firmware_policy:
      <<: *api_info
      name: test_firmware_policy
      description: "Test firmware policy description - updated"
      target_platform: "Standalone"
      model_bundle_combo:
        - model_family: "UCSC-C220-M5"
          bundle_version: "4.3(2.250037)"
        - model_family: "UCSC-C220-M4"
          bundle_version: "4.1(2m)"
      exclude_drives: true
      tags:
        - Key: "Site"
          Value: "Test"
    register: update_res

  # Need to fetch info after update as intersight api won't return the updated exclude list as part of the update api.
  - name: Fetch info after update
    cisco.intersight.intersight_firmware_policy_info:
      <<: *api_info
      name: test_firmware_policy
    register: update_info_res

  - name: Verify firmware policy update
    ansible.builtin.assert:
      that:
        - update_info_res.api_response[0].ExcludeComponentList | length == 1
        - '"local-disk" in update_info_res.api_response[0].ExcludeComponentList'

  always:
  - name: Remove firmware policies
    cisco.intersight.intersight_firmware_policy:
      <<: *api_info
      name: "{{ item }}"
      state: absent
    loop:
      - test_firmware_policy
      - test_firmware_policy_2
      - test_firmware_policy_validate
      - test_firmware_policy_drives_only
      - test_firmware_policy_no_exclusions 